---
import Resume from "@/components/Resume.astro";
import type { ResumeData } from "@/data/resume-data";
import fs from "fs/promises";
import { existsSync as fsExists } from "fs";
import path from "path";

export async function getStaticPaths() {
    if (!fsExists("./src/resumes")) {
        return [];
    }
    const entries = await Promise.all(
        (await fs.readdir("./src/resumes"))
            .filter((file) => file.endsWith(".tsx"))
            .map((file) => path.parse(file).name)
    );

    return entries.map((entry) => ({
        params: { resume: entry },
        props: { resume: entry },
    }));
}

type Props = {
    resume: string;
};

const { resume } = Astro.props as Props;

const { default: data } = (await import(`/src/resumes/${resume}.tsx`)) as {
    default: ResumeData;
};

const year = new Date().getFullYear();
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>{year} Resume - {data.name}</title>
    </head>
    <body>
        <Resume {data} />
    </body>
</html>
